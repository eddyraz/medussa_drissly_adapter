(undo-tree-save-format-version . 1)
"d55655270345319eff052ef7da1187d47f6fde89"
[nil nil nil nil (25272 28578 761641 28000) 0 nil]
([nil nil ((267 . 270) (266 . 268) (t 25272 28408 3004 910000)) nil (25272 57505 182160 780000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-doc-face fontified t)) . -266) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("1" 0 1 (face font-lock-doc-face fontified t)) . -267) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("9" 0 1 (face font-lock-doc-face fontified t)) . -268) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("~" 0 1 (face font-lock-doc-face fontified t)) . -269) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("]" 0 1 (face font-lock-doc-face fontified t)) . -270) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . -1) 271) nil (25272 57505 182150 278000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-keyword-face fontified t)) . -6467) (undo-tree-id11 . -1) 6468 (t 25272 57505 216833 188000)) nil (25272 59198 976126 670000) 0 nil])
([nil nil ((6639 . 6643) (6624 . 6640) (t 25272 59198 971630 446000)) nil (25272 61114 853925 706000) 0 nil])
([nil nil ((6463 . 6465) (#("  " 0 2 (fontified t)) . 6462) (undo-tree-id7 . -2) (6462 . 6465) (#("  " 0 2 (fontified nil)) . 6461) (6461 . 6463) (6461 . 6462) (t 25272 61114 862857 738000)) nil (25273 10312 382894 178000) 0 nil])
([nil nil ((6463 . 6465) (#("  " 0 2 (fontified nil)) . 6462) (6462 . 6464) (6462 . 6463)) nil (25273 10312 382891 472000) 0 nil])
([nil nil ((6465 . 6477)) nil (25273 10312 382889 919000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-function-name-face)) . -6476) (undo-tree-id6 . -1) 6477) nil (25273 10312 382888 587000) 0 nil])
([nil nil ((6476 . 6483)) nil (25273 10312 382886 623000) 0 nil])
([nil nil ((6483 . 6485)) nil (25273 10312 382885 711000) 0 nil])
([nil nil ((6485 . 6490)) nil (25273 10312 382884 619000) 0 nil])
([nil nil ((6490 . 6493)) nil (25273 10312 382883 527000) 0 nil])
([nil nil ((6483 . 6484)) nil (25273 10312 382882 455000) 0 nil])
([nil nil ((6486 . 6491)) nil (25273 10312 382881 243000) 0 nil])
([nil nil ((6491 . 6500)) nil (25273 10312 382880 411000) 0 nil])
([nil nil ((1877 . 1880)) nil (25273 10312 382879 550000) 0 nil])
([nil nil ((1880 . 1894)) nil (25273 10312 382878 568000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-type-face)) . -1888) (undo-tree-id0 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -1889) (undo-tree-id1 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -1890) (undo-tree-id2 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -1891) (undo-tree-id3 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -1892) (undo-tree-id4 . -1) (#("." 0 1 (fontified t)) . -1893) (undo-tree-id5 . -1) 1894) nil (25273 10312 382876 183000) 0 nil])
([nil nil ((1888 . 1894)) nil (25273 10312 382857 247000) 0 nil])
([nil nil ((1894 . 1899)) nil (25273 10312 382855 924000) 0 nil])
([nil nil ((1899 . 1903)) nil (25273 10312 382852 247000) 0 nil])
([nil nil ((6526 . 6533) (t 25273 10312 420470 370000)) nil (25273 10557 408534 790000) 0 nil])
([nil nil ((6533 . 6551)) nil (25273 10557 408532 576000) 0 nil])
([nil nil ((6512 . 6517)) nil (25273 10557 408530 893000) 0 nil])
([nil nil ((6508 . 6512)) nil (25273 10557 408528 528000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -6511) (undo-tree-id14 . -1) 6512) nil (25273 10557 408525 863000) 0 nil])
([nil nil ((6511 . 6517)) nil (25273 10557 408521 234000) 0 nil])
([nil nil ((6526 . 6547)) nil (25273 10557 408518 920000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -6549) (6549 . 6550) (#(")" 0 1 (fontified nil)) . -6549) (6549 . 6550) (6547 . 6550)) nil (25273 10557 408515 884000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6511) (undo-tree-id8 . -1) (#("t" 0 1 (fontified t)) . -6512) (undo-tree-id9 . -1) (#("o" 0 1 (fontified t)) . -6513) (undo-tree-id10 . -1) (#("k" 0 1 (fontified t)) . -6514) (undo-tree-id11 . -1) (#("e" 0 1 (fontified t)) . -6515) (undo-tree-id12 . -1) (#("n" 0 1 (fontified t)) . -6516) (undo-tree-id13 . -1) 6517) nil (25273 10557 408507 839000) 0 nil])
([nil nil ((6582 . 6586)) nil (25273 10557 408442 624000) 0 nil])
([nil nil ((6586 . 6589)) nil (25273 10557 408435 350000) 0 nil])
([nil nil ((#("IO.inspect(body)" 0 2 (fontified t face font-lock-type-face) 2 16 (fontified t)) . 6768) (undo-tree-id15 . -16) (t 25273 10557 422286 590000)) nil (25273 10662 785688 571000) 0 nil])
([nil nil ((#("IO.inspect(number |> to_charlist |> length)" 0 2 (face font-lock-type-face fontified t) 2 6 (fontified t) 6 43 (fontified t)) . 7477) (undo-tree-id20 . -6) (undo-tree-id21 . -43) (t 25273 10662 821975 393000)) nil (25273 10681 960493 49000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 7477) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1)) nil (25273 10681 960486 827000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7477) (#(" " 0 1 (fontified t)) . 7477) (#(" " 0 1 (fontified t)) . 7477) (#(" " 0 1 (fontified t)) . 7477)) nil (25273 10681 960465 216000) 0 nil])
([nil nil ((#("      
" 0 7 (fontified t)) . -7519) (undo-tree-id22 . -7) (undo-tree-id23 . -7) (6766 . 6767) (#("    
" 0 4 (fontified t) 4 5 (fontified t)) . -6766) (undo-tree-id24 . -4) (6550 . 6604) (#("    client = Medusa.TeslaHttp.client(tkn,ops)
    end
  
" 0 4 (fontified t) 4 10 (fontified t face font-lock-variable-name-face) 10 13 (fontified t) 13 19 (fontified t face font-lock-type-face) 19 29 (fontified t face font-lock-type-face) 29 36 (fontified t) 36 45 (fontified t) 45 46 (fontified t) 46 50 (fontified t) 50 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t) 54 56 (fontified t) 56 57 (fontified t)) . -6550) (undo-tree-id25 . -37) (undo-tree-id26 . -13) (#("
" 0 1 (fontified t)) . -6494) ("
" . -5951) ("	
" . -5697) (2663 . 2836) (#("    if phone_has_10_digits?(phone_num) or ops == \"catalogo_productos\" or ops == \"consulta_saldo\" or ops == \"catalogo_servicios\" or ops == \"consulta_transaccion\" do
" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 39 (fontified t) 39 41 (face font-lock-keyword-face fontified t) 41 49 (fontified t) 49 50 (syntax-table (15) face font-lock-string-face fontified t) 50 56 (face font-lock-string-face fontified t) 56 68 (fontified t face font-lock-string-face) 68 69 (syntax-table (15) fontified t face font-lock-string-face) 69 70 (fontified t) 70 72 (fontified t face font-lock-keyword-face) 72 80 (fontified t) 80 81 (syntax-table (15) fontified t face font-lock-string-face) 81 95 (fontified t face font-lock-string-face) 95 96 (syntax-table (15) fontified t face font-lock-string-face) 96 97 (fontified t) 97 99 (fontified t face font-lock-keyword-face) 99 107 (fontified t) 107 108 (syntax-table (15) fontified t face font-lock-string-face) 108 126 (fontified t face font-lock-string-face) 126 127 (syntax-table (15) fontified t face font-lock-string-face) 127 128 (fontified t) 128 130 (fontified t face font-lock-keyword-face) 130 138 (fontified t) 138 139 (syntax-table (15) fontified t face font-lock-string-face) 139 159 (fontified t face font-lock-string-face) 159 160 (syntax-table (15) fontified t face font-lock-string-face) 160 161 (fontified t) 161 163 (fontified t face font-lock-keyword-face) 163 164 (fontified t)) . -2663) (t 25273 10681 994619 499000)) nil (25273 10687 145776 629000) 0 nil])
([nil nil ((6604 . 6606) (#("  " 0 2 (fontified t)) . 6603) (undo-tree-id34 . -2) (6602 . 6606) (t 25273 10687 150791 429000)) nil (25273 12151 969462 150000) 0 nil])
([nil nil ((2705 . 2709) (#(" " 0 1 (fontified nil)) . 2704) (undo-tree-id33 . -1) (2705 . 2706)) nil (25273 12151 969460 116000) 0 nil])
([nil nil ((2709 . 2730)) nil (25273 12151 969458 463000) 0 nil])
([nil nil ((2730 . 2744)) nil (25273 12151 969457 722000) 0 nil])
([nil nil ((2704 . 2705)) nil (25273 12151 969457 31000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#("
" 0 1 (fontified t)) . 2705) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (25273 12151 969452 372000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705) (#(" " 0 1 (fontified t)) . 2705)) nil (25273 12151 969443 857000) 0 nil])
([nil nil ((2705 . 2709) (#(" " 0 1 (fontified nil)) . 2704) (undo-tree-id29 . -1) (2705 . 2706)) nil (25273 12151 969440 31000) 0 nil])
([nil nil ((2709 . 2712)) nil (25273 12151 969438 107000) 0 nil])
([nil nil ((2741 . 2744) (#("   " 0 3 (fontified t)) . -2709) (2742 . 2743)) nil (25273 12151 969436 895000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2775) (#(" " 0 1 (fontified t)) . 2775) (#(" " 0 1 (fontified t)) . 2775) (#(" " 0 1 (fontified t)) . 2775) (#(" " 0 1 (fontified t)) . 2775)) nil (25273 12151 969434 891000) 0 nil])
([nil nil ((2806 . 2810) (#(" " 0 1 (fontified t)) . 2805) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (2806 . 2807)) nil (25273 12151 969430 333000) 0 nil])
([nil nil ((3984 . 3992) (t 25273 12160 424114 37000)) nil (25273 13119 130831 558000) 0 nil])
([nil nil ((#("headers: get_headers()" 0 8 (fontified t face elixir-atom-face) 8 22 (fontified t)) . 3992) (undo-tree-id149 . -22) (undo-tree-id150 . -22) (undo-tree-id151 . 1) (undo-tree-id152 . -22) (undo-tree-id153 . 2) (undo-tree-id154 . -21) 4014) nil (25273 13119 130828 241000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4012 . 4013) (nil fontified nil 3999 . 4013) (nil fontified nil 3991 . 3999) (3991 . 4013)) nil (25273 13119 130808 986000) 0 nil])
([nil nil ((4013 . 4027)) nil (25273 13119 130805 720000) 0 nil])
([nil nil ((4027 . 4037)) nil (25273 13119 130803 846000) 0 nil])
([nil nil ((4218 . 4220) (#("  " 0 2 (fontified t)) . 4217) (undo-tree-id148 . -2) (4217 . 4220) (#("  " 0 2 (fontified nil)) . 4216) (4216 . 4218) (4216 . 4217)) nil (25273 13119 130800 741000) 0 nil])
([nil nil ((4218 . 4220) (#("  " 0 2 (fontified nil)) . 4217) (4217 . 4219) (4217 . 4218)) nil (25273 13119 130794 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4471 . 4472) (nil fontified nil 4469 . 4472) (nil fontified nil 4467 . 4469) (nil fontified nil 4466 . 4467) (nil fontified nil 4463 . 4466) (nil fontified nil 4459 . 4463) (nil fontified nil 4456 . 4459) (nil fontified nil 4425 . 4456) (nil fontified nil 4424 . 4425) (nil fontified nil 4411 . 4424) (nil fontified nil 4408 . 4411) (nil fontified nil 4387 . 4408) (nil fontified nil 4386 . 4387) (nil fontified nil 4378 . 4386) (nil fontified nil 4374 . 4378) (nil fontified nil 4370 . 4374) (nil fontified nil 4364 . 4370) (nil fontified nil 4363 . 4364) (nil fontified nil 4360 . 4363) (nil fontified nil 4340 . 4360) (nil fontified nil 4339 . 4340) (nil fontified nil 4326 . 4339) (nil fontified nil 4323 . 4326) (nil fontified nil 4307 . 4323) (nil fontified nil 4302 . 4307) (nil fontified nil 4301 . 4302) (nil fontified nil 4293 . 4301) (nil fontified nil 4292 . 4293) (nil fontified nil 4289 . 4292) (nil fontified nil 4288 . 4289) (nil fontified nil 4281 . 4288) (nil fontified nil 4280 . 4281) (nil fontified nil 4276 . 4280) (nil fontified nil 4266 . 4276) (nil fontified nil 4265 . 4266) (nil fontified nil 4263 . 4265) (nil fontified nil 4262 . 4263) (nil fontified nil 4258 . 4262) (nil fontified nil 4254 . 4258) (nil fontified nil 4253 . 4254) (nil fontified nil 4251 . 4253) (nil fontified nil 4244 . 4251) (nil fontified nil 4225 . 4244) (nil fontified nil 4224 . 4225) (nil fontified nil 4220 . 4224) (4220 . 4472)) nil (25273 13119 130786 464000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -4319) (undo-tree-id127 . -1) (#("n" 0 1 (fontified t)) . -4320) (undo-tree-id128 . -1) (#("e" 0 1 (fontified t)) . -4321) (undo-tree-id129 . -1) (#("y" 0 1 (fontified t)) . -4322) (undo-tree-id130 . -1) (#("," 0 1 (fontified t)) . -4323) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -4324) (undo-tree-id132 . -1) (#("[" 0 1 (fontified t)) . -4325) (undo-tree-id133 . -1) (#("r" 0 1 (fontified t)) . -4326) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t)) . -4327) (undo-tree-id135 . -1) (#("c" 0 1 (fontified t)) . -4328) (undo-tree-id136 . -1) (#("v" 0 1 (fontified t)) . -4329) (undo-tree-id137 . -1) (#("_" 0 1 (fontified t)) . -4330) (undo-tree-id138 . -1) (#("t" 0 1 (fontified t)) . -4331) (undo-tree-id139 . -1) (#("i" 0 1 (fontified t)) . -4332) (undo-tree-id140 . -1) (#("m" 0 1 (fontified t)) . -4333) (undo-tree-id141 . -1) (#("e" 0 1 (fontified t)) . -4334) (undo-tree-id142 . -1) (#("o" 0 1 (fontified t)) . -4335) (undo-tree-id143 . -1) (#("u" 0 1 (fontified t)) . -4336) (undo-tree-id144 . -1) (#("t" 0 1 (fontified t)) . -4337) (undo-tree-id145 . -1) (#(":" 0 1 (fontified t)) . -4338) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t)) . -4339) (undo-tree-id147 . -1) 4340) nil (25273 13119 130758 452000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -4301) (undo-tree-id109 . -1) (#("T" 0 1 (fontified t)) . -4302) (undo-tree-id110 . -1) (#("e" 0 1 (fontified t)) . -4303) (undo-tree-id111 . -1) (#("s" 0 1 (fontified t)) . -4304) (undo-tree-id112 . -1) (#("l" 0 1 (fontified t)) . -4305) (undo-tree-id113 . -1) (#("a" 0 1 (fontified t)) . -4306) (undo-tree-id114 . -1) (#("." 0 1 (fontified t)) . -4307) (undo-tree-id115 . -1) (#("A" 0 1 (fontified t)) . -4308) (undo-tree-id116 . -1) (#("d" 0 1 (fontified t)) . -4309) (undo-tree-id117 . -1) (#("a" 0 1 (fontified t)) . -4310) (undo-tree-id118 . -1) (#("p" 0 1 (fontified t)) . -4311) (undo-tree-id119 . -1) (#("t" 0 1 (fontified t)) . -4312) (undo-tree-id120 . -1) (#("e" 0 1 (fontified t)) . -4313) (undo-tree-id121 . -1) (#("r" 0 1 (fontified t)) . -4314) (undo-tree-id122 . -1) (#("." 0 1 (fontified t)) . -4315) (undo-tree-id123 . -1) (#("H" 0 1 (fontified t)) . -4316) (undo-tree-id124 . -1) (#("a" 0 1 (fontified t)) . -4317) (undo-tree-id125 . -1) (#("c" 0 1 (fontified t)) . -4318) (undo-tree-id126 . -1) 4319) nil (25273 13119 130708 981000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -4321) (undo-tree-id103 . -1) (undo-tree-id104 . 1) (undo-tree-id105 . -1) (#("}" 0 1 (fontified t)) . -4322) (undo-tree-id106 . -1) (undo-tree-id107 . 1) (undo-tree-id108 . -1) 4323) nil (25273 13119 130670 119000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face elixir-atom-face)) . -4354) (undo-tree-id87 . -1) (#("p" 0 1 (fontified t face elixir-atom-face)) . -4355) (undo-tree-id88 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -4356) (undo-tree-id89 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -4357) (undo-tree-id90 . -1) (#("r" 0 1 (fontified t face elixir-atom-face)) . -4358) (undo-tree-id91 . -1) (#("." 0 1 (fontified t)) . -4359) (undo-tree-id92 . -1) (#("H" 0 1 (fontified t face elixir-atom-face)) . -4360) (undo-tree-id93 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -4361) (undo-tree-id94 . -1) (#("c" 0 1 (fontified t face elixir-atom-face)) . -4362) (undo-tree-id95 . -1) (#("k" 0 1 (fontified t face elixir-atom-face)) . -4363) (undo-tree-id96 . -1) (#("n" 0 1 (fontified t face elixir-atom-face)) . -4364) (undo-tree-id97 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -4365) (undo-tree-id98 . -1) (#("y" 0 1 (fontified t face elixir-atom-face)) . -4366) (undo-tree-id99 . -1) (#("," 0 1 (fontified t)) . -4367) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t)) . -4368) (undo-tree-id101 . -1) (#("[" 0 1 (fontified t)) . -4369) (undo-tree-id102 . -1) 4370) nil (25273 13119 130507 899000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -4345) (undo-tree-id78 . -1) (#("T" 0 1 (fontified t face elixir-atom-face)) . -4346) (undo-tree-id79 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -4347) (undo-tree-id80 . -1) (#("s" 0 1 (fontified t face elixir-atom-face)) . -4348) (undo-tree-id81 . -1) (#("l" 0 1 (fontified t face elixir-atom-face)) . -4349) (undo-tree-id82 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -4350) (undo-tree-id83 . -1) (#("." 0 1 (fontified t)) . -4351) (undo-tree-id84 . -1) (#("A" 0 1 (fontified t face elixir-atom-face)) . -4352) (undo-tree-id85 . -1) (#("d" 0 1 (fontified t face elixir-atom-face)) . -4353) (undo-tree-id86 . -1) 4354) nil (25273 13119 130469 768000) 0 nil])
([nil nil ((4301 . 4315)) nil (25273 13119 130450 312000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -4301) (undo-tree-id64 . -1) (#("e" 0 1 (fontified t)) . -4302) (undo-tree-id65 . -1) (#("c" 0 1 (fontified t)) . -4303) (undo-tree-id66 . -1) (#("v" 0 1 (fontified t)) . -4304) (undo-tree-id67 . -1) (#("_" 0 1 (fontified t)) . -4305) (undo-tree-id68 . -1) (#("t" 0 1 (fontified t)) . -4306) (undo-tree-id69 . -1) (#("i" 0 1 (fontified t)) . -4307) (undo-tree-id70 . -1) (#("m" 0 1 (fontified t)) . -4308) (undo-tree-id71 . -1) (#("e" 0 1 (fontified t)) . -4309) (undo-tree-id72 . -1) (#("o" 0 1 (fontified t)) . -4310) (undo-tree-id73 . -1) (#("u" 0 1 (fontified t)) . -4311) (undo-tree-id74 . -1) (#("t" 0 1 (fontified t)) . -4312) (undo-tree-id75 . -1) (#(":" 0 1 (fontified t)) . -4313) (undo-tree-id76 . -1) (#(" " 0 1 (fontified t)) . -4314) (undo-tree-id77 . -1) 4315) nil (25273 13119 130442 778000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4345) (#(":" 0 1 (fontified t)) . 4345) (#("t" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("u" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("o" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("e" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("m" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("i" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("t" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("_" 0 1 (fontified t face font-lock-comment-face)) . 4345) (#("v" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("c" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("e" 0 1 (fontified t face elixir-atom-face)) . 4345) (#("r" 0 1 (fontified t face elixir-atom-face)) . 4345)) nil (25273 13119 130406 441000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -4376) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("}" 0 1 (fontified t)) . -4377) (undo-tree-id61 . -1) (undo-tree-id62 . 1) (undo-tree-id63 . -1) 4378) nil (25273 13119 130398 356000) 0 nil])
([nil nil ((4037 . 4048)) nil (25273 13119 130388 177000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4035) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t)) . -4036) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("_" 0 1 (fontified t)) . -4037) (undo-tree-id55 . -1) (#("o" 0 1 (fontified t)) . -4038) (undo-tree-id56 . -1) (#("f" 0 1 (fontified t)) . -4039) (undo-tree-id57 . -1) (#("_" 0 1 (fontified t)) . -4040) (undo-tree-id58 . -1) 4041) nil (25273 13119 130383 428000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4033) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("y" 0 1 (fontified t)) . -4034) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 4035) nil (25273 13119 130359 584000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-function-name-face)) . -4232) (undo-tree-id35 . -1) (#("y" 0 1 (fontified t face font-lock-function-name-face)) . -4233) (undo-tree-id36 . -1) (#("p" 0 1 (fontified t face font-lock-function-name-face)) . -4234) (undo-tree-id37 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -4235) (undo-tree-id38 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -4236) (undo-tree-id39 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -4237) (undo-tree-id40 . -1) (#("f" 0 1 (fontified t face font-lock-function-name-face)) . -4238) (undo-tree-id41 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -4239) (undo-tree-id42 . -1) 4240) nil (25273 13119 130342 923000) 0 nil])
([nil nil ((4041 . 4047) (4040 . 4042)) nil (25273 13119 130307 87000) 0 nil])
([nil nil ((4051 . 4055) (t 25273 13119 170331 103000)) nil (25273 13213 620535 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4160 . 4161) (nil fontified nil 4160 . 4161) (nil fontified nil 4159 . 4160) (nil fontified nil 4151 . 4159) (nil fontified nil 4139 . 4151) (nil fontified nil 4126 . 4139) (nil fontified nil 4124 . 4126) (nil fontified nil 4123 . 4124) (nil fontified nil 4110 . 4123) (nil fontified nil 4102 . 4110) (nil fontified nil 4101 . 4102) (nil fontified nil 4100 . 4101) (nil fontified nil 4095 . 4100) (nil fontified nil 4078 . 4095) (nil fontified nil 4074 . 4078) (nil fontified nil 4073 . 4074) (nil fontified nil 4059 . 4073) (nil fontified nil 4056 . 4059) (nil fontified nil 4055 . 4056) (4055 . 4161)) nil (25273 13213 620529 544000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -4095) (undo-tree-id155 . -1) (#("p" 0 1 (fontified t)) . -4096) (undo-tree-id156 . -1) (#("t" 0 1 (fontified t)) . -4097) (undo-tree-id157 . -1) (#("s" 0 1 (fontified t)) . -4098) (undo-tree-id158 . -1) (#(":" 0 1 (fontified t)) . -4099) (undo-tree-id159 . -1) (#(" " 0 1 (fontified t)) . -4100) (undo-tree-id160 . -1) 4101) nil (25273 13213 620511 991000) 0 nil])
([nil nil ((3940 . 3941) (t 25273 13213 632081 227000)) nil (25273 13215 730693 44000) 0 nil])
([nil nil ((#("#    {:ok, response} = Tesla.post(url, body, opts: [headers: get_headers(), recv_timeout: get_timeout(action)])" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-face) 6 9 (fontified t face font-lock-comment-face) 9 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 28 (fontified t face font-lock-comment-face) 28 45 (fontified t face font-lock-comment-face) 45 50 (fontified t face font-lock-comment-face) 50 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-face) 52 60 (fontified t face font-lock-comment-face) 60 73 (fontified t face font-lock-comment-face) 73 74 (fontified t rear-nonsticky t face font-lock-comment-face) 74 76 (fontified t face font-lock-comment-face) 76 89 (fontified t face font-lock-comment-face) 89 101 (fontified t face font-lock-comment-face) 101 109 (fontified t face font-lock-comment-face) 109 110 (fontified t face font-lock-comment-face) 110 111 (fontified t face font-lock-comment-face)) . 3940) (undo-tree-id196 . -94) (undo-tree-id197 . -110) (undo-tree-id198 . -94) (undo-tree-id199 . -52) (undo-tree-id200 . -5) (undo-tree-id201 . -111) (t 25273 13215 740033 454000)) nil (25273 13297 893593 8000) 0 nil])
([nil nil ((#("# server_response_body = response.body |> Jason.encode
    # Logger.info(\"Drissly Response: #{server_response_body}\")

    #    parse_response(payment_id, response)" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 55 (fontified t face font-lock-comment-face) 55 59 (fontified t) 59 61 (fontified t face font-lock-comment-delimiter-face) 61 73 (fontified t face font-lock-comment-face) 73 74 (syntax-table (15) fontified t face font-lock-comment-face) 74 92 (fontified t face font-lock-comment-face) 92 93 (elixir-interpolation (nil #<marker at 4515 in medusa_drissly_adapter.ex> #<marker at 4515 in medusa_drissly_adapter.ex> #<marker at 4515 in medusa_drissly_adapter.ex> #<marker at 4515 in medusa_drissly_adapter.ex>) syntax-table (2) fontified t face font-lock-comment-face) 93 115 (fontified t face font-lock-comment-face) 115 116 (syntax-table (15) fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-face) 118 123 (fontified t) 123 128 (fontified t face font-lock-comment-delimiter-face) 128 164 (fontified t face font-lock-comment-face)) . -4050) (undo-tree-id174 . -55) (undo-tree-id175 . -55) (undo-tree-id176 . -118) (undo-tree-id177 . -118) (undo-tree-id178 . -119) (undo-tree-id179 . -119) (undo-tree-id180 . -164) (undo-tree-id181 . -119) (undo-tree-id182 . -92) (undo-tree-id183 . -115) (undo-tree-id184 . -92) (undo-tree-id185 . -115) (undo-tree-id186 . -92) (undo-tree-id187 . -115) (undo-tree-id188 . -92) (undo-tree-id189 . -115) (undo-tree-id190 . -164) (undo-tree-id191 . -119) (undo-tree-id192 . 1) (undo-tree-id193 . -164) (undo-tree-id194 . 22) (undo-tree-id195 . -143) 4214) nil (25273 13297 893580 64000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3939) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1)) nil (25273 13297 893545 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4056) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1)) nil (25273 13297 893463 788000) 0 nil])
([nil nil (("
  
" . -6667) (4241 . 4242) (#("  
" 0 2 (fontified t) 2 3 (fontified t)) . -4241) (3960 . 4069) (#("    {:ok, response} = Tesla.post(url, body, [headers: get_headers(), recv_timeout: get_timeout(action)])
    
" 0 4 (fontified t) 4 5 (fontified t) 5 8 (fontified t face elixir-atom-face) 8 22 (fontified t) 22 23 (fontified t face font-lock-type-face) 23 27 (fontified t face font-lock-type-face) 27 44 (fontified t) 44 45 (fontified t) 45 53 (fontified t face elixir-atom-face) 53 66 (fontified t) 66 67 (rear-nonsticky t fontified t) 67 69 (fontified t) 69 82 (fontified t face elixir-atom-face) 82 94 (fontified t) 94 102 (fontified t) 102 103 (fontified t) 103 104 (rear-nonsticky t fontified t) 104 105 (fontified t) 105 109 (fontified t) 109 110 (fontified t)) . -3960) (undo-tree-id203 . -109) (undo-tree-id204 . -109) (undo-tree-id205 . -109) (undo-tree-id206 . -109) (undo-tree-id207 . -109) (undo-tree-id208 . -4) (2705 . 2863) (#("    ops == \"catalogo_productos\" or
    ops == \"consulta_saldo\" or
    ops == \"catalogo_servicios\" or
    ops == \"consulta_transaccion\" do
" 0 4 (fontified t) 4 11 (fontified t) 11 12 (fontified t syntax-table (15) face font-lock-string-face) 12 30 (fontified t face font-lock-string-face) 30 31 (fontified t syntax-table (15) face font-lock-string-face) 31 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 46 (fontified t) 46 47 (fontified t syntax-table (15) face font-lock-string-face) 47 61 (fontified t face font-lock-string-face) 61 62 (fontified t syntax-table (15) face font-lock-string-face) 62 63 (fontified t) 63 65 (fontified t face font-lock-keyword-face) 65 66 (fontified t) 66 77 (fontified t) 77 78 (fontified t syntax-table (15) face font-lock-string-face) 78 96 (fontified t face font-lock-string-face) 96 97 (fontified t syntax-table (15) face font-lock-string-face) 97 98 (fontified t) 98 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t) 101 105 (fontified t) 105 112 (fontified t) 112 113 (fontified t syntax-table (15) face font-lock-string-face) 113 133 (fontified t face font-lock-string-face) 133 134 (fontified t syntax-table (15) face font-lock-string-face) 134 135 (fontified t) 135 137 (fontified t face font-lock-keyword-face) 137 138 (fontified t)) . -2705) (t 25273 13297 906245 35000)) nil (25273 13404 430170 844000) 0 nil])
([nil nil ((4530 . 4532)) nil (25273 13404 430154 884000) 0 nil])
([nil nil ((4533 . 4534) (4532 . 4534) (#("'" 0 1 (fontified nil syntax-table (15))) . -4532) (4532 . 4533)) nil (25273 13404 430151 468000) 0 nil])
([nil nil ((4543 . 4544)) nil (25273 13404 430147 631000) 0 nil])
([nil nil ((4555 . 4556)) nil (25273 13404 430145 186000) 0 nil])
([nil nil ((4590 . 4591)) nil (25273 13404 430142 491000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -4533) (undo-tree-id202 . -1) 4534) nil (25273 13404 430137 723000) 0 nil])
([nil nil ((4625 . 4626)) nil (25273 13404 430115 50000) 0 nil])
([nil nil ((#("import Medusa.TeslaHttp" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 13 (fontified t face font-lock-type-face) 13 23 (fontified t face font-lock-type-face)) . 1880) (undo-tree-id213 . -23) (undo-tree-id214 . -23) (t 25273 13404 440115 561000)) nil (25273 13421 167805 316000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1880) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1)) nil (25273 13421 167801 709000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1880) (#(" " 0 1 (fontified t)) . 1880)) nil (25273 13421 167786 852000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-doc-face)) . -784) (undo-tree-id409 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -785) (undo-tree-id410 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -786) (undo-tree-id411 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -787) (undo-tree-id412 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -788) (undo-tree-id413 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -789) (undo-tree-id414 . -1) 790 (t 25273 13421 167798 157000)) nil (25273 13938 595276 980000) 0 nil])
([nil nil ((784 . 802)) nil (25273 13938 595264 286000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 802)) nil (25273 13938 595262 753000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-doc-face)) . -920) (undo-tree-id408 . -1) 921) nil (25273 13938 595260 859000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-doc-face)) . -899) (undo-tree-id387 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -900) (undo-tree-id388 . -1) (#("j" 0 1 (fontified t face font-lock-doc-face)) . -901) (undo-tree-id389 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -902) (undo-tree-id390 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -903) (undo-tree-id391 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -904) (undo-tree-id392 . -1) (#("c" 0 1 (fontified t face font-lock-doc-face)) . -905) (undo-tree-id393 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -906) (undo-tree-id394 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -907) (undo-tree-id395 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -908) (undo-tree-id396 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -909) (undo-tree-id397 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -910) (undo-tree-id398 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -911) (undo-tree-id399 . -1) (#("v" 0 1 (fontified t face font-lock-doc-face)) . -912) (undo-tree-id400 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -913) (undo-tree-id401 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -914) (undo-tree-id402 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -915) (undo-tree-id403 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -916) (undo-tree-id404 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -917) (undo-tree-id405 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -918) (undo-tree-id406 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -919) (undo-tree-id407 . -1) 920) nil (25273 13938 595251 230000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t face font-lock-doc-face)) . -884) (undo-tree-id372 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -885) (undo-tree-id373 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -886) (undo-tree-id374 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -887) (undo-tree-id375 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -888) (undo-tree-id376 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -889) (undo-tree-id377 . -1) (#("d" 0 1 (fontified t face font-lock-doc-face)) . -890) (undo-tree-id378 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -891) (undo-tree-id379 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -892) (undo-tree-id380 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -893) (undo-tree-id381 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -894) (undo-tree-id382 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -895) (undo-tree-id383 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -896) (undo-tree-id384 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -897) (undo-tree-id385 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -898) (undo-tree-id386 . -1) 899) nil (25273 13938 595212 857000) 0 nil])
([nil nil ((912 . 913)) nil (25273 13938 595186 757000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-doc-face)) . 913) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1)) nil (25273 13938 595184 813000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 913) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 913) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 913) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 913) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 913) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 913) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 913) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 913)) nil (25273 13938 595177 679000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-doc-face)) . -752) (undo-tree-id364 . -1) (#("u" 0 1 (fontified t face font-lock-doc-face)) . -753) (undo-tree-id365 . -1) (#("p" 0 1 (fontified t face font-lock-doc-face)) . -754) (undo-tree-id366 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -755) (undo-tree-id367 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -756) (undo-tree-id368 . -1) 757) nil (25273 13938 595171 587000) 0 nil])
([nil nil ((752 . 762)) nil (25273 13938 595161 859000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-doc-face)) . -1010) (undo-tree-id358 . -1) (#("u" 0 1 (fontified t face font-lock-doc-face)) . -1011) (undo-tree-id359 . -1) (#("p" 0 1 (fontified t face font-lock-doc-face)) . -1012) (undo-tree-id360 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1013) (undo-tree-id361 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1014) (undo-tree-id362 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1015) (undo-tree-id363 . -1) 1016) nil (25273 13938 595158 462000) 0 nil])
([nil nil ((1010 . 1021)) nil (25273 13938 595133 614000) 0 nil])
([nil nil ((1064 . 1071)) nil (25273 13938 595132 41000) 0 nil])
([nil nil ((1127 . 1139)) nil (25273 13938 595130 749000) 0 nil])
([nil nil ((1205 . 1211)) nil (25273 13938 595129 336000) 0 nil])
([nil nil ((1211 . 1213)) nil (25273 13938 595127 863000) 0 nil])
([nil nil ((1271 . 1281)) nil (25273 13938 595126 381000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-doc-face)) . -1274) (undo-tree-id351 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1275) (undo-tree-id352 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -1276) (undo-tree-id353 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -1277) (undo-tree-id354 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1278) (undo-tree-id355 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1279) (undo-tree-id356 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1280) (undo-tree-id357 . -1) 1281) nil (25273 13938 595122 694000) 0 nil])
([nil nil ((1274 . 1282)) nil (25273 13938 595109 638000) 0 nil])
([nil nil ((1336 . 1339)) nil (25273 13938 595108 186000) 0 nil])
([nil nil ((1339 . 1347)) nil (25273 13938 595106 803000) 0 nil])
([nil nil ((1403 . 1416)) nil (25273 13938 595105 300000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-doc-face)) . -1742) (undo-tree-id328 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1743) (undo-tree-id329 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1744) (undo-tree-id330 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1745) (undo-tree-id331 . -1) (#("," 0 1 (fontified t face font-lock-doc-face)) . -1746) (undo-tree-id332 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1747) (undo-tree-id333 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1748) (undo-tree-id334 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1749) (undo-tree-id335 . -1) (#("," 0 1 (fontified t face font-lock-doc-face)) . -1750) (undo-tree-id336 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1751) (undo-tree-id337 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1752) (undo-tree-id338 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1753) (undo-tree-id339 . -1) (#("," 0 1 (fontified t face font-lock-doc-face)) . -1754) (undo-tree-id340 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1755) (undo-tree-id341 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1756) (undo-tree-id342 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1757) (undo-tree-id343 . -1) (#("," 0 1 (fontified t face font-lock-doc-face)) . -1758) (undo-tree-id344 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1759) (undo-tree-id345 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1760) (undo-tree-id346 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1761) (undo-tree-id347 . -1) (#("}" 0 1 (fontified t face font-lock-doc-face)) . -1762) (undo-tree-id348 . -1) (undo-tree-id349 . 1) (undo-tree-id350 . -1) 1763) nil (25273 13938 595097 245000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face font-lock-doc-face)) . -1738) (undo-tree-id324 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1739) (undo-tree-id325 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1740) (undo-tree-id326 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1741) (undo-tree-id327 . -1) 1742) nil (25273 13938 595059 111000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1739) (1739 . 1740) (#("]" 0 1 (fontified nil face font-lock-doc-face)) . -1739) (1739 . 1740) (1738 . 1740)) nil (25273 13938 595051 146000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-doc-face)) . -1799) (undo-tree-id322 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1800) (undo-tree-id323 . -1) 1801) nil (25273 13938 595047 509000) 0 nil])
([nil nil ((1799 . 1802)) nil (25273 13938 595043 161000) 0 nil])
([nil nil ((1767 . 1774)) nil (25273 13938 595041 748000) 0 nil])
([nil nil ((1819 . 1820)) nil (25273 13938 595040 405000) 0 nil])
([nil nil ((1818 . 1820)) nil (25273 13938 595039 13000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-doc-face)) . -1818) (undo-tree-id320 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1819) (undo-tree-id321 . -1) 1820) nil (25273 13938 595037 39000) 0 nil])
([nil nil ((1818 . 1826)) nil (25273 13938 595032 170000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-doc-face)) . -1822) (undo-tree-id316 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1823) (undo-tree-id317 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -1824) (undo-tree-id318 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1825) (undo-tree-id319 . -1) 1826) nil (25273 13938 595029 144000) 0 nil])
([nil nil ((1822 . 1831)) nil (25273 13938 595021 960000) 0 nil])
([nil nil ((1831 . 1852)) nil (25273 13938 595020 627000) 0 nil])
([nil nil ((1852 . 1853)) nil (25273 13938 595019 285000) 0 nil])
([nil nil ((1853 . 1854)) nil (25273 13938 595017 882000) 0 nil])
([nil nil ((1854 . 1858)) nil (25273 13938 595016 540000) 0 nil])
([nil nil ((1858 . 1862)) nil (25273 13938 595015 207000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1920 . 1921) (nil fontified nil 1920 . 1921) (nil fontified nil 1919 . 1920) (nil fontified nil 1918 . 1919) (nil fontified nil 1891 . 1918) (nil fontified nil 1862 . 1891) (1862 . 1921)) nil (25273 13938 595012 782000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-doc-face)) . -1898) (undo-tree-id298 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1899) (undo-tree-id299 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -1900) (undo-tree-id300 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1901) (undo-tree-id301 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1902) (undo-tree-id302 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -1903) (undo-tree-id303 . -1) (#("g" 0 1 (fontified t face font-lock-doc-face)) . -1904) (undo-tree-id304 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -1905) (undo-tree-id305 . -1) (#("_" 0 1 (fontified t face font-lock-doc-face)) . -1906) (undo-tree-id306 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -1907) (undo-tree-id307 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1908) (undo-tree-id308 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -1909) (undo-tree-id309 . -1) (#("v" 0 1 (fontified t face font-lock-doc-face)) . -1910) (undo-tree-id310 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1911) (undo-tree-id311 . -1) (#("c" 0 1 (fontified t face font-lock-doc-face)) . -1912) (undo-tree-id312 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1913) (undo-tree-id313 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -1914) (undo-tree-id314 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -1915) (undo-tree-id315 . -1) 1916) nil (25273 13938 595002 392000) 0 nil])
([nil nil ((1898 . 1905)) nil (25273 13938 594974 649000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -1916) (1916 . 1917) (#("\"" 0 1 (fontified nil face font-lock-doc-face)) . -1916) (1916 . 1917) (1915 . 1917) (#("\"" 0 1 (fontified nil face font-lock-doc-face)) . -1915) (1908 . 1916)) nil (25273 13938 594972 325000) 0 nil])
([nil nil ((1916 . 1918)) nil (25273 13938 594968 828000) 0 nil])
([nil nil ((1918 . 1926)) nil (25273 13938 594967 395000) 0 nil])
([nil nil ((1929 . 1930)) nil (25273 13938 594966 123000) 0 nil])
([nil nil ((1930 . 1936)) nil (25273 13938 594964 860000) 0 nil])
([nil nil ((1936 . 1937)) nil (25273 13938 594963 588000) 0 nil])
([nil nil ((1937 . 1945)) nil (25273 13938 594962 245000) 0 nil])
([nil nil ((766 . 772)) nil (25273 13938 594960 873000) 0 nil])
([nil nil ((1942 . 1943)) nil (25273 13938 594959 480000) 0 nil])
([nil nil ((1943 . 1960)) nil (25273 13938 594958 137000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-doc-face)) . -1951) (undo-tree-id289 . -1) (#("P" 0 1 (fontified t face font-lock-doc-face)) . -1952) (undo-tree-id290 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1953) (undo-tree-id291 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -1954) (undo-tree-id292 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1955) (undo-tree-id293 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1956) (undo-tree-id294 . -1) (#("p" 0 1 (fontified t face font-lock-doc-face)) . -1957) (undo-tree-id295 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1958) (undo-tree-id296 . -1) (#("g" 0 1 (fontified t face font-lock-doc-face)) . -1959) (undo-tree-id297 . -1) 1960) nil (25273 13938 594953 939000) 0 nil])
([nil nil ((1951 . 1964)) nil (25273 13938 594938 810000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-doc-face)) . -1961) (undo-tree-id286 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1962) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1963) (undo-tree-id288 . -1) 1964) nil (25273 13938 594936 386000) 0 nil])
([nil nil ((1961 . 1962)) nil (25273 13938 594930 414000) 0 nil])
([nil nil ((1962 . 1970)) nil (25273 13938 594928 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2124 . 2125) (nil fontified nil 1970 . 2125) (1970 . 2125)) nil (25273 13938 594927 358000) 0 nil])
([nil nil ((1961 . 1972)) nil (25273 13938 594925 244000) 0 nil])
([nil nil ((2136 . 2137)) nil (25273 13938 594923 932000) 0 nil])
([nil nil ((2137 . 2147)) nil (25273 13938 594922 569000) 0 nil])
([nil nil ((2145 . 2148)) nil (25273 13938 594921 176000) 0 nil])
([nil nil ((2148 . 2169)) nil (25273 13938 594919 804000) 0 nil])
([nil nil ((2169 . 2173)) nil (25273 13938 594918 411000) 0 nil])
([nil nil ((2173 . 2174)) nil (25273 13938 594917 109000) 0 nil])
([nil nil ((2174 . 2182)) nil (25273 13938 594915 766000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2254 . 2255) (nil fontified nil 2182 . 2255) (2182 . 2255)) nil (25273 13938 594914 223000) 0 nil])
([nil nil ((1552 . 1553)) nil (25273 13938 594912 229000) 0 nil])
([nil nil ((1553 . 1556)) nil (25273 13938 594910 907000) 0 nil])
([nil nil ((1552 . 1553)) nil (25273 13938 594909 604000) 0 nil])
([nil nil ((1553 . 1574)) nil (25273 13938 594908 292000) 0 nil])
([nil nil ((1574 . 1583)) nil (25273 13938 594906 849000) 0 nil])
([nil nil ((1583 . 1584)) nil (25273 13938 594905 516000) 0 nil])
([nil nil ((1584 . 1592)) nil (25273 13938 594904 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1646 . 1647) (nil fontified nil 1592 . 1647) (1592 . 1647)) nil (25273 13938 594902 641000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face font-lock-doc-face)) . -1735) (undo-tree-id279 . -1) (#("1" 0 1 (fontified t face font-lock-doc-face)) . -1736) (undo-tree-id280 . -1) (#("9" 0 1 (fontified t face font-lock-doc-face)) . -1737) (undo-tree-id281 . -1) (#("~" 0 1 (fontified t face font-lock-doc-face)) . -1738) (undo-tree-id282 . -1) (#("]" 0 1 (fontified t face font-lock-doc-face)) . -1739) (undo-tree-id283 . -1) (undo-tree-id284 . 1) (undo-tree-id285 . -1) 1740) nil (25273 13938 594898 803000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-doc-face)) . -1566) (undo-tree-id278 . -1) 1567) nil (25273 13938 594887 211000) 0 nil])
([nil nil ((1566 . 1567)) nil (25273 13938 594884 346000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-doc-face)) . -1566) (undo-tree-id277 . -1) 1567) nil (25273 13938 594882 492000) 0 nil])
([nil nil ((1566 . 1567)) nil (25273 13938 594879 346000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-doc-face)) . -1569) (undo-tree-id276 . -1) 1570) nil (25273 13938 594877 663000) 0 nil])
([nil nil ((1569 . 1570)) nil (25273 13938 594874 647000) 0 nil])
([nil nil ((#("Para consulta de saldo
        Medusa.DrisslyAdapter.make_request(\"consulta_saldo\",[])" 0 23 (fontified t face font-lock-doc-face) 23 31 (fontified t face font-lock-doc-face) 31 85 (fontified t face font-lock-doc-face) 85 86 (rear-nonsticky t fontified t face font-lock-doc-face)) . 1561) (undo-tree-id266 . -23) (undo-tree-id267 . -23) (undo-tree-id268 . -86) (undo-tree-id269 . -23) (undo-tree-id270 . -31) (undo-tree-id271 . -86) (undo-tree-id272 . 1) (undo-tree-id273 . -86) (undo-tree-id274 . 21) (undo-tree-id275 . -66) 1647) nil (25273 13938 594871 812000) 0 nil])
([nil nil ((1756 . 1757)) nil (25273 13938 594856 442000) 0 nil])
([nil nil ((1756 . 1757)) nil (25273 13938 594854 999000) 0 nil])
([nil nil ((1757 . 1765)) nil (25273 13938 594853 126000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil face font-lock-doc-face)) . 1765) (undo-tree-id265 . -1) (1764 . 1765) (#(" " 0 1 (fontified nil face font-lock-doc-face)) . 1763) (1764 . 1765) 1765) nil (25273 13938 594850 911000) 0 nil])
([nil nil ((nil fontified nil 1850 . 1851) (nil fontified nil 1796 . 1850) (nil fontified nil 1788 . 1796) (nil fontified nil 1765 . 1788) (1765 . 1851)) nil (25273 13938 594846 543000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-doc-face)) . 1552) (undo-tree-id264 . -1)) nil (25273 13938 594843 647000) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t face font-lock-doc-face) 8 9 (fontified t face font-lock-doc-face)) . 1552) (undo-tree-id259 . -9) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -9) (undo-tree-id263 . -9)) nil (25273 13938 594840 361000) 0 nil])
([nil nil ((#("        Nota: El folio solo se necesita para la consulta de una transaccion previa." 0 15 (fontified t face font-lock-doc-face) 15 83 (fontified t face font-lock-doc-face)) . 1468)) nil (25273 13938 594833 197000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-doc-face)) . 1468) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1)) nil (25273 13938 594831 103000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-doc-face)) . -2166) (undo-tree-id253 . -1) 2167) nil (25273 13938 594822 527000) 0 nil])
([nil nil ((2167 . 2168)) nil (25273 13938 594818 158000) 0 nil])
([nil nil ((1517 . 1520)) nil (25273 13938 594816 736000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t face font-lock-doc-face)) . -1518) (undo-tree-id251 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1519) (undo-tree-id252 . -1) 1520) nil (25273 13938 594814 361000) 0 nil])
([nil nil ((1518 . 1524)) nil (25273 13938 594743 816000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-doc-face)) . -1523) (undo-tree-id250 . -1) 1524) nil (25273 13938 594742 112000) 0 nil])
([nil nil ((1523 . 1544)) nil (25273 13938 594739 187000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-doc-face)) . -1530) (undo-tree-id236 . -1) (#("u" 0 1 (fontified t face font-lock-doc-face)) . -1531) (undo-tree-id237 . -1) (#("p" 0 1 (fontified t face font-lock-doc-face)) . -1532) (undo-tree-id238 . -1) (#("l" 0 1 (fontified t face font-lock-doc-face)) . -1533) (undo-tree-id239 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1534) (undo-tree-id240 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -1535) (undo-tree-id241 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1536) (undo-tree-id242 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -1537) (undo-tree-id243 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -1538) (undo-tree-id244 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -1539) (undo-tree-id245 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -1540) (undo-tree-id246 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1541) (undo-tree-id247 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -1542) (undo-tree-id248 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -1543) (undo-tree-id249 . -1) 1544) nil (25273 13938 594733 225000) 0 nil])
([nil nil ((1675 . 1676)) nil (25273 13938 594710 401000) 0 nil])
([nil nil ((1675 . 1676)) nil (25273 13938 594708 778000) 0 nil])
([nil nil ((1676 . 1684)) nil (25273 13938 594707 145000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1742 . 1743) (nil fontified nil 1742 . 1743) (nil fontified nil 1741 . 1742) (nil fontified nil 1740 . 1741) (nil fontified nil 1713 . 1740) (nil fontified nil 1684 . 1713) (1684 . 1743)) nil (25273 13938 594704 630000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-doc-face)) . -1737) (undo-tree-id235 . -1) 1738) nil (25273 13938 594700 192000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-doc-face)) . -1729) (undo-tree-id227 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -1730) (undo-tree-id228 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -1731) (undo-tree-id229 . -1) (#("v" 0 1 (fontified t face font-lock-doc-face)) . -1732) (undo-tree-id230 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1733) (undo-tree-id231 . -1) (#("c" 0 1 (fontified t face font-lock-doc-face)) . -1734) (undo-tree-id232 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -1735) (undo-tree-id233 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -1736) (undo-tree-id234 . -1) 1737) nil (25273 13938 594693 599000) 0 nil])
([nil nil ((1729 . 1738)) nil (25273 13938 594678 360000) 0 nil])
([nil nil ((1675 . 1676)) nil (25273 13938 594676 296000) 0 nil])
([nil nil ((1676 . 1679)) nil (25273 13938 594673 991000) 0 nil])
([nil nil ((1675 . 1681)) nil (25273 13938 594672 398000) 0 nil])
([nil nil ((1681 . 1682)) nil (25273 13938 594670 725000) 0 nil])
([nil nil ((1682 . 1691)) nil (25273 13938 594668 832000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-doc-face)) . 2378) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1)) nil (25273 13938 594666 407000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t face font-lock-doc-face) 1 2 (fontified t face font-lock-doc-face)) . 2378) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2)) nil (25273 13938 594658 692000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-doc-face)) . 2378) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1)) nil (25273 13938 594646 990000) 0 nil])
([nil nil ((2384 . 2387)) nil (25273 13938 594612 453000) 0 nil])
([nil current ((5086 . 5188) (#("	''
       # %{
       #   email: get_user_name(),
       #   password: get_password()
       # }
" 1 2 (face font-lock-string-face syntax-table (15)) 2 3 (face font-lock-string-face syntax-table (15)) 11 13 (face font-lock-comment-delimiter-face) 13 16 (face font-lock-comment-face) 23 27 (face font-lock-comment-delimiter-face) 27 33 (face font-lock-comment-face) 33 36 (face font-lock-comment-face) 36 40 (face font-lock-comment-face) 40 41 (face font-lock-comment-face) 41 42 (face font-lock-comment-face) 42 48 (face font-lock-comment-face) 48 49 (face font-lock-comment-face) 49 51 (face font-lock-comment-face) 58 62 (face font-lock-comment-delimiter-face) 62 71 (face font-lock-comment-face) 71 78 (face font-lock-comment-face) 78 87 (face font-lock-comment-face) 94 96 (face font-lock-comment-delimiter-face) 96 97 (face font-lock-comment-face) 97 98 (face font-lock-comment-face)) . -5086) (undo-tree-id415 . -59) (2385 . 2386) (#("  
" 0 2 (fontified t) 2 3 (fontified t)) . -2385) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (t 25273 13938 597861 858000)) nil (25273 13971 516982 707000) 0 nil])
nil
